@using LaborExchange.Frontend.Clients
@rendermode InteractiveServer

@inject VacanciesClient client
@inject NavigationManager NavigationManager

<div class="modal fade" id="@GetModalId(vacancy)" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">@title</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="@OnDeleteClickAsync">Delete</button>
      </div>
    </div>
  </div>
</div>


@code {
    [Parameter]    
    public Vacancy? vacancy {get; set;}

    private string title = string.Empty;

    protected override void OnParametersSet() {
        ArgumentNullException.ThrowIfNull(vacancy);
        title = $"Delete {vacancy?.FirmName}: {vacancy?.Position.Name}?";
    }

    public static string GetModalId(Vacancy? vacancy) {
        ArgumentNullException.ThrowIfNull(vacancy);
        return $"deleteModal-{vacancy.Id}";
    }

    private async Task OnDeleteClickAsync() {
        ArgumentNullException.ThrowIfNull(vacancy);
        await client.DeleteVacancyAsync(vacancy.Id);
        NavigationManager.Refresh();
    }
}